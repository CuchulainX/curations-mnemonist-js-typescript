How to adapt CircularBuffer push & unshift methods not to throw errors when capacity if overflown (overwriting values instead)

PUSH

CircularBuffer.prototype.push = function(item) {

  var index = (this.start + this.size) % this.capacity;

  this.items[index] = item;

  if (this.size === this.capacity) {

    // throw 
    
    if (this.start === this.capacity - 1) this.start = 0;
    else this.start++;

    return this.size;
  }

  return ++this.size;
};

UNSHIFT

CircularBuffer.prototype.unshift = function(item) {

  var index = this.start - 1;
  if (this.start === 0) index = this.capacity - 1;

  this.items[index] = item;

  if (this.size === this.capacity) {
    // throw 
    
    if (this.start === 0) {
      this.start = this.capacity - 1;
    }
    else {
      this.start--;
    }
    return this.size;
  }

  this.start = index;

  return ++this.size;
};

